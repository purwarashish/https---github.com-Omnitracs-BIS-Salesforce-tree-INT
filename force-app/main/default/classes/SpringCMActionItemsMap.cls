//
// Generated by Dle
// date: 8/11/2018

public class SpringCMActionItemsMap {

	public class User {
		public String UserName {get;set;} 
		public String Email {get;set;} 
		public String FirstName {get;set;} 
		public String LastName {get;set;} 
		public String Href {get;set;} 

		public User(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'UserName') {
							UserName = parser.getText();
						} else if (text == 'Email') {
							Email = parser.getText();
						} else if (text == 'FirstName') {
							FirstName = parser.getText();
						} else if (text == 'LastName') {
							LastName = parser.getText();
						} else if (text == 'Href') {
							Href = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'User consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Items> Items {get;set;} 
	public String Href {get;set;} 
	public Integer Offset {get;set;} 
	public Integer Limit_Z {get;set;} 
	public String First {get;set;} 
	public String Next {get;set;} 
	public String Last {get;set;} 
	public Integer Total {get;set;} 

	public SpringCMActionItemsMap(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'Items') {
						Items = arrayOfItems(parser);
					} else if (text == 'Href') {
						Href = parser.getText();
					} else if (text == 'Offset') {
						Offset = parser.getIntegerValue();
					} else if (text == 'Limit') {
						Limit_Z = parser.getIntegerValue();
					} else if (text == 'First') {
						First = parser.getText();
					} else if (text == 'Next') {
						Next = parser.getText();
					} else if (text == 'Last') {
						Last = parser.getText();
					} else if (text == 'Total') {
						Total = parser.getIntegerValue();
					} else {
						System.debug(LoggingLevel.WARN, 'SpringCMActionItemsMap consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class User_Z {
		public String FirstName {get;set;} 
		public String LastName {get;set;} 

		public User_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'FirstName') {
							FirstName = parser.getText();
						} else if (text == 'LastName') {
							LastName = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'User_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Items {
		public String UserEmail {get;set;} 
		public String Action {get;set;} 
		public String Comment {get;set;} 
		public User User {get;set;} 
		public String CreatedDate {get;set;} 
		public String MoreInfo {get;set;} 
		public RelatedDocument RelatedDocument {get;set;} 

		public Items(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'UserEmail') {
							UserEmail = parser.getText();
						} else if (text == 'Action') {
							Action = parser.getText();
						} else if (text == 'Comment') {
							Comment = parser.getText();
						} else if (text == 'User') {
							User = new User(parser);
						} else if (text == 'CreatedDate') {
							CreatedDate = parser.getText();
						} else if (text == 'MoreInfo') {
							MoreInfo = parser.getText();
						} else if (text == 'RelatedDocument') {
							RelatedDocument = new RelatedDocument(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Items consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class RelatedDocument {
		public String Href {get;set;} 

		public RelatedDocument(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Href') {
							Href = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'RelatedDocument consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public static SpringCMActionItemsMap parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new SpringCMActionItemsMap(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Items> arrayOfItems(System.JSONParser p) {
        List<Items> res = new List<Items>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Items(p));
        }
        return res;
    }

}